<!--  for trajectory tracking -->
<launch>
<arg name="mav_name" default="firefly" />

<group ns="$(arg mav_name)1">

<node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
  <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
  <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
  <remap from="odometry" to="odometry_sensor1/odometry" />
</node>
<node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="1.0 0 1.3 0 2"/>
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

</group>

<group ns="$(arg mav_name)2">

<node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
  <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
  <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
  <remap from="odometry" to="odometry_sensor1/odometry" />
</node>
<node name="waypoint_publisher" pkg="rotors_gazebo" type="waypoint_publisher" output="screen" args="-0.3 0 1.3 0 2"/>
<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

</group>

<node
    pkg="offb"
    type="geo_plan"
    name="geo_plan"
    output="screen">
</node>

<node
    pkg="offb"
    type="geo2_new"
    name="geo2_new"
    output="screen">
</node>




</launch>
